{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/event/event.component.ts","./src/app/event/event.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError, retry} from 'rxjs/operators';\nimport {Event} from './interfaces/event';\nimport has = Reflect.has;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  constructor(private http: HttpClient) {\n  }\n\n  appId = '11';\n  title = 'BandsInTown';\n  inputValue = '';\n\n  readonly rootUrl = 'https://rest.bandsintown.com';\n  upcomingEvents$: Observable<Event[]>;\n  pastEvents$: Observable<Event[]>;\n  allEvents: any[];\n  favouriteCity = 'Who knows';\n  upcomingEventsLoaded = false;\n  pastEventsLoaded = false;\n\n  inputHandler(event: any): void {\n    this.inputValue = event.target.value;\n  }\n\n  getAllEvents(): void {\n    this.allEvents = [];\n\n    const artist = this.inputValue\n      .replace(/\\?/gi, '\\%253F')\n      .replace(/\\//gi, '\\%252F')\n      .replace(/\\*/gi, '\\%252A')\n      .replace(/\\\\&quot;/gi, '\\%27C');\n\n    this.getUpcomingEvents(artist).subscribe((events: any[]) => {\n      this.allEvents = this.allEvents.concat(events);\n      this.upcomingEventsLoaded = true;\n    });\n    this.getPastEvents(artist).subscribe((events: any[]) => {\n      this.allEvents = this.allEvents.concat(events);\n      this.findFavourite();\n      this.pastEventsLoaded = true;\n    });\n  }\n\n  findFavourite(): void {\n    const hash = new Map();\n    this.allEvents.map((event: any) => {\n      const key = `${event.venue.city}, ${event.venue.country}`;\n      if (!hash.has(key)) {\n        hash.set(key, 1);\n      } else {\n        hash.set(key, hash.get(key) + 1);\n      }\n    });\n    const result = [...hash.entries()].reduce((acc, e) => e[1] > acc[1] ? e : acc);\n    console.log(result);\n    this.favouriteCity = result[0];\n  }\n\n  getPastEvents(artist: string): Observable<any[]> {\n    const params = new HttpParams().set('app_id', this.appId).set('date', 'past');\n    const req = this.rootUrl + '/artists/' + artist + '/events';\n    return this.pastEvents$ = this.http.get<any[]>(req, {params});\n  }\n\n  getUpcomingEvents(artist: string): Observable<any[]> {\n    const params = new HttpParams().set('app_id', this.appId).set('date', 'upcoming');\n    const req = this.rootUrl + '/artists/' + artist + '/events';\n    return this.upcomingEvents$ = this.http.get<any[]>(req, {params});\n  }\n}\n\n","<mat-toolbar>\n  <span>bandsintown</span>\n</mat-toolbar>\n<mat-sidenav-container>\n  <mat-sidenav-content>\n    <div class=\"search-component\">\n      <mat-form-field floatLabel=\"auto\" appearance=\"fill\" hideRequiredMarker>\n        <mat-label>Artist</mat-label>\n        <input matInput required (input)=\"inputHandler($event)\">\n        <mat-hint>Band's favourite city? {{ favouriteCity }}!</mat-hint>\n      </mat-form-field>\n      <button type=\"submit\" mat-raised-button color=\"primary\" (click)=\"getAllEvents()\">Search</button>\n      <!--        (keydown.enter)=\"inputHandler($event)\"-->\n    </div>\n\n    <div class=\"events\" *ngIf=\"pastEventsLoaded && upcomingEventsLoaded\">\n      <div class=\"upcoming-events\">\n        <h2 class=\"mat-h2 events-heading\">Upcoming Events</h2>\n        <app-event\n          *ngFor=\"let event of upcomingEvents$ | async\"\n          [event]=\"event\"\n        ></app-event>\n      </div>\n      <div class=\"past-events\">\n        <h2 class=\"mat-h2 events-heading\">Past Events</h2>\n        <app-event\n          *ngFor=\"let event of pastEvents$ | async\"\n          [event]=\"event\"\n        ></app-event>\n      </div>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSidenavContent} from '@angular/material/sidenav';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport {AppComponent} from './app.component';\nimport { EventComponent } from './event/event.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EventComponent\n  ],\n  imports: [\n    BrowserModule,\n    NoopAnimationsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCardModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule {\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {Event} from '../interfaces/event';\n\n@Component({\n  selector: 'app-event',\n  templateUrl: './event.component.html',\n  styleUrls: ['./event.component.scss']\n})\nexport class EventComponent implements OnInit {\n\n  constructor() { }\n\n  @Input() event: Event;\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>\n  <mat-card-header>\n    <mat-card-title>{{ event.venue.name }}</mat-card-title>\n    <mat-card-subtitle>{{ event.venue.country }}, {{ event.venue.city }}</mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content>\n    <p>\n      {{ event.datetime | date:'MMMM d, y \\'at\\' h:mm a' }}\n    </p>\n  </mat-card-content>\n  <mat-card-actions>\n    <a mat-stroked-button class=\"link first-action\" href=\"{{ event.url }}\" target=\"_blank\">Event Page</a>\n  </mat-card-actions>\n</mat-card>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}